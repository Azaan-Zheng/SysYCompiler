
@0s0 = global str "20373184\n"
@0s1 = global str "Wow, you will begin test your program!\n"
@0s2 = global str "\n"
@0s3 = global str "\n"
@0s4 = global str "\n"
@0s5 = global str "\n"
@0s6 = global str "\n"
@0s7 = global str "\n"
@0s8 = global str "\n"
@0s9 = global str "-"
@0s10 = global str "\n"

define i32 @main() {

main_label0:
    %0 = alloca i32 4
    %1 = li i32, i32 1
    store i32 %1, i32* %0(0)
    %2 = alloca i32 4
    %3 = li i32, i32 -2
    store i32 %3, i32* %2(0)
    %4 = alloca i32 4
    %5 = li i32, i32 3
    store i32 %5, i32* %4(0)
    %6 = alloca i32 4
    %7 = li i32, i32 4
    store i32 %7, i32* %6(0)
    %8 = alloca i32 4
    %9 = li i32, i32 5
    store i32 %9, i32* %8(0)
    %10 = alloca i32 4
    %11 = li i32, i32 6
    store i32 %11, i32* %10(0)
    %12 = alloca i32 4
    %13 = li i32, i32 111
    store i32 %13, i32* %12(0)
    %14 = alloca i32 4
    %15 = li i32, i32 123
    %16 = li i32, i32 234
    %17 = add i32 %15, %16
    store i32 %17, i32* %14(0)
    %18 = alloca i32 4
    %19 = li i32, i32 6
    %20 = li i32, i32 5
    %21 = li i32, i32 3
    %22 = add i32 %20, %21
    %23 = mul i32 %19, %22
    %24 = li i32, i32 10
    %25 = sub i32 %23, %24
    store i32 %25, i32* %18(0)
    %26 = alloca i32 4
    %27 = load i32, i32* %12(0)
    %28 = load i32, i32* %14(0)
    %29 = li i32, i32 3
    %30 = mul i32 %28, %29
    %31 = add i32 %27, %30
    store i32 %31, i32* %26(0)
    %32 = alloca i32 4
    %33 = alloca i32 4
    %34 = alloca i32 4
    %35 = alloca i32 4
    %36 = alloca i32 4
    %37 = alloca i32 4
    %38 = alloca i32 4
    %39 = alloca i32 4
    %40 = alloca i32 4
    %41 = alloca i32 4
    %42 = alloca i32 4
    %43 = alloca i32 4
    %44 = alloca i32 4
    %45 = alloca i32 4
    %46 = call i32 @0getint()
    store i32 %46, i32* %32(0)
    %47 = call i32 @0getint()
    store i32 %47, i32* %33(0)
    %48 = call i32 @0getint()
    store i32 %48, i32* %34(0)
    %49 = call i32 @0getint()
    store i32 %49, i32* %35(0)
    %50 = call i32 @0getint()
    store i32 %50, i32* %36(0)
    %51 = call i32 @0getint()
    store i32 %51, i32* %37(0)
    call void @0putstr(str @0s0)
    call void @0putstr(str @0s1)
    %52 = li i32, i32 1
    %53 = li i32, i32 2
    %54 = add i32 %52, %53
    call void @0putint(i32 %54)
    call void @0putstr(str @0s2)
    %55 = load i32, i32* %8(0)
    %56 = load i32, i32* %10(0)
    %57 = mul i32 %55, %56
    call void @0putint(i32 %57)
    call void @0putstr(str @0s3)
    %58 = load i32, i32* %0(0)
    %59 = load i32, i32* %2(0)
    %60 = add i32 %58, %59
    %61 = load i32, i32* %4(0)
    %62 = mul i32 %60, %61
    store i32 %62, i32* %38(0)
    %63 = load i32, i32* %14(0)
    %64 = load i32, i32* %12(0)
    %65 = rem i32 %63, %64
    %66 = load i32, i32* %8(0)
    %67 = add i32 %65, %66
    store i32 %67, i32* %39(0)
    %68 = load i32, i32* %26(0)
    %69 = load i32, i32* %18(0)
    %70 = mul i32 %68, %69
    %71 = load i32, i32* %6(0)
    %72 = sub i32 %70, %71
    store i32 %72, i32* %40(0)
    %73 = load i32, i32* %32(0)
    %74 = li i32, i32 2
    %75 = div i32 %73, %74
    %76 = load i32, i32* %10(0)
    %77 = mul i32 %75, %76
    store i32 %77, i32* %41(0)
    %78 = load i32, i32* %33(0)
    %79 = li i32, i32 1
    %80 = load i32, i32* %34(0)
    %81 = add i32 %79, %80
    %82 = mul i32 %78, %81
    %83 = li i32, i32 3
    %84 = rem i32 %82, %83
    store i32 %84, i32* %42(0)
    %85 = load i32, i32* %35(0)
    %86 = sub i32 0, %85
    store i32 %86, i32* %43(0)
    %87 = li i32, i32 6
    %88 = load i32, i32* %36(0)
    %89 = add i32 %87, %88
    store i32 %89, i32* %44(0)
    %90 = load i32, i32* %38(0)
    call void @0putint(i32 %90)
    call void @0putstr(str @0s4)
    %91 = load i32, i32* %39(0)
    call void @0putint(i32 %91)
    call void @0putstr(str @0s5)
    %92 = load i32, i32* %40(0)
    call void @0putint(i32 %92)
    call void @0putstr(str @0s6)
    %93 = load i32, i32* %41(0)
    call void @0putint(i32 %93)
    call void @0putstr(str @0s7)
    %94 = load i32, i32* %42(0)
    call void @0putint(i32 %94)
    call void @0putstr(str @0s8)
    %95 = load i32, i32* %43(0)
    %96 = load i32, i32* %44(0)
    call void @0putint(i32 %95)
    call void @0putstr(str @0s9)
    call void @0putint(i32 %96)
    call void @0putstr(str @0s10)
    %97 = li i32, i32 0
    ret i32 %97
}

