
@0s0 = global str "19182636\n"
@0s1 = global str "<= has problem\n"
@0s2 = global str "<= is ok\n"
@0s3 = global str "== != has problem\n"
@0s4 = global str "== != is ok\n"

define i32 @main() {

main_label0:
    call void @0putstr(str @0s0)
    %0 = alloca i32 4
    %1 = li i32, i32 5
    store i32 %1, i32* %0(0)
    %2 = alloca i32 4
    %3 = li i32, i32 6
    store i32 %3, i32* %2(0)
    %4 = alloca array 24
    %5 = li i32, i32 0
    store i32 %5, i32* %4(0)
    %6 = li i32, i32 1
    store i32 %6, i32* %4(4)
    %7 = li i32, i32 2
    store i32 %7, i32* %4(8)
    %8 = li i32, i32 3
    store i32 %8, i32* %4(12)
    %9 = li i32, i32 6
    store i32 %9, i32* %4(16)
    %10 = li i32, i32 12
    store i32 %10, i32* %4(20)
    %11 = alloca array 24
    %12 = li i32, i32 10
    store i32 %12, i32* %11(0)
    %13 = li i32, i32 11
    store i32 %13, i32* %11(4)
    %14 = li i32, i32 12
    store i32 %14, i32* %11(8)
    %15 = li i32, i32 13
    store i32 %15, i32* %11(12)
    %16 = li i32, i32 14
    store i32 %16, i32* %11(16)
    %17 = li i32, i32 15
    store i32 %17, i32* %11(20)

main_label1:
    %18 = load i32, i32* %0(0)
    %19 = load i32, i32* %2(0)
    bgt %18, %19 main_label5

main_label2:
    %20 = load i32, i32* %0(0)
    %21 = load i32, i32* %2(0)
    %22 = li i32, i32 1
    %23 = mul i32 %22, 4
    %24 = addu i32* %4, %23
    %25 = load i32, i32* %24(0)
    %26 = addu i32 %21, %25
    bgt %20, %26 main_label5

main_label3:
    %27 = load i32, i32* %0(0)
    %28 = load i32, i32* %2(0)
    %29 = sle i32 %27, %28
    %30 = li i32, i32 0
    %31 = mul i32 %30, 4
    %32 = addu i32* %4, %31
    %33 = load i32, i32* %32(0)
    %34 = sle i32 %29, %33
    %35 = li i32, i32 0
    bne %34, %35 main_label5

main_label4:
    %36 = load i32, i32* %0(0)
    %37 = load i32, i32* %2(0)
    %38 = sle i32 %36, %37
    %39 = li i32, i32 2
    %40 = mul i32 %39, 4
    %41 = addu i32* %4, %40
    %42 = load i32, i32* %41(0)
    %43 = sle i32 %42, %38
    %44 = li i32, i32 1
    bge %43, %44 main_label5
    jump main_label6

main_label5:
    call void @0putstr(str @0s1)
    jump main_label7

main_label6:
    call void @0putstr(str @0s2)

main_label7:

main_label8:
    %45 = load i32, i32* %0(0)
    %46 = load i32, i32* %2(0)
    beq %45, %46 main_label12

main_label9:
    %47 = load i32, i32* %0(0)
    %48 = load i32, i32* %2(0)
    %49 = seq i32 %47, %48
    %50 = li i32, i32 0
    bne %49, %50 main_label12

main_label10:
    %51 = load i32, i32* %0(0)
    %52 = load i32, i32* %2(0)
    %53 = slt i32 %52, %51
    %54 = load i32, i32* %0(0)
    %55 = load i32, i32* %2(0)
    %56 = slt i32 %54, %55
    %57 = seq i32 %53, %56
    %58 = li i32, i32 1
    beq %57, %58 main_label12

main_label11:
    %59 = load i32, i32* %0(0)
    %60 = load i32, i32* %2(0)
    %61 = sle i32 %60, %59
    %62 = li i32, i32 2
    %63 = mul i32 %62, 4
    %64 = addu i32* %4, %63
    %65 = load i32, i32* %64(0)
    %66 = seq i32 %61, %65
    %67 = li i32, i32 0
    %68 = mul i32 %67, 4
    %69 = addu i32* %4, %68
    %70 = load i32, i32* %69(0)
    %71 = sne i32 %70, %66
    %72 = li i32, i32 4
    %73 = mul i32 %72, 4
    %74 = addu i32* %4, %73
    %75 = load i32, i32* %74(0)
    beq %71, %75 main_label12
    jump main_label13

main_label12:
    call void @0putstr(str @0s3)
    jump main_label14

main_label13:
    call void @0putstr(str @0s4)

main_label14:
    %76 = li i32, i32 0
    ret i32 %76
}

