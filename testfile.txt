/*
// Created by emilyu on 2022/9/6.
// C
*/
const int Mod = 389, N = 100005;
int a_to_the_a, cnt = 0;
int n = 9;

int qpow(int a, int b) {                            // int func with params
    int ans = 1;

    while (b) {
        b = b / 2;
        a = (a * a) % Mod;
        if (b % 2) {
            ans = (ans * a) % Mod;
        }
    }

    return ans;
}

int gcd(int a, int b) {                             // int recursion
    if (!b) {
        return a;
    }
    return gcd(b, a % b);
}

int testExp() {                                     // int func without param
    a_to_the_a = n * n;
                        // single exp without using its value;

    int b = a_to_the_a + 1;

    int e = qpow(a_to_the_a, b);



    int f = n, g = 0;
    if (f < 0) {
        g = 10;
    } else {
        if (f > 10) {
            g = 20;
        } else {
            if (f == n) {
                g = 30;
            }
        }
    }
    if (f <= 10) {
        g = g + f;
    }



    return gcd(f, g);                                    // a stmt not simplified
}

int main() {
    printf("Exptest: %d\n", testExp());
    return 0;
}
