
@ga = global i32 1
@gb = global i32 -2
@gc = global i32 8
@gd = global i32 -8
@ge = global i32 1
@gf = global i32 1
@garr = global array 1, 2
@garr1 = global array 1, -2, 8
@garr2 = global array 1, 2, 3, 4, 5, 6
@gwxy = global i32 1
@gorz = global i32 -1
@gqwe = global i32 -9
@gw11 = global i32 -2
@gx11 = global i32 0
@gy11 = global i32 0
@gnarr = global array 0, 0
@gnarr1 = global array 1, 2, 3
@gnarr4 = global array 1, -1, -9
@gnarr5 = global array 1, 3, 1, -9
@0s0 = global str "VOID FUNC\n"
@0s1 = global str "\n"
@0s2 = global str "Hello world\n"
@0s3 = global str "Global ConstDecl: "
@0s4 = global str " "
@0s5 = global str " "
@0s6 = global str " "
@0s7 = global str " "
@0s8 = global str " "
@0s9 = global str "\n"
@0s10 = global str "Global VarDecl: "
@0s11 = global str " "
@0s12 = global str " "
@0s13 = global str " "
@0s14 = global str " "
@0s15 = global str " "
@0s16 = global str "\n"
@0s17 = global str "ConstDecl: "
@0s18 = global str " "
@0s19 = global str " "
@0s20 = global str " "
@0s21 = global str " "
@0s22 = global str " "
@0s23 = global str "\n"
@0s24 = global str "VarDecl: "
@0s25 = global str " "
@0s26 = global str " "
@0s27 = global str " "
@0s28 = global str " "
@0s29 = global str " "
@0s30 = global str "\n"
@0s31 = global str "Func: "
@0s32 = global str "\n"
@0s33 = global str "Func: "
@0s34 = global str "\n"

define i32 @tfunc6(i32*) {

tfunc6_label0:
    %1 = alloca i32 4
    %2 = lw i32*, array %1(0)
    %3 = addiu i32 0, 1
    %4 = mul i32 %3, 4
    %5 = add i32* %2, %4
    %6 = lw i32, i32* %5(0)
    ret i32 %6
}

define i32 @tfunc5() {

tfunc5_label0:
    %0 = alloca i32 4
    %1 = la i32*, array @gnarr5
    %2 = addiu i32 0, 1
    %3 = mul i32 %2, 8
    %4 = add i32* %1, %3
    %5 = call i32 @tfunc6(i32* %4)
    sw i32 %5, i32* %0(0)

tfunc5_label1:

tfunc5_label2:
    %6 = lw i32, i32* %0(0)
    %7 = addiu i32 0, 10
    bgez %6, %7 tfunc5_label5

tfunc5_label3:
    %8 = lw i32, i32* %0(0)
    %9 = addiu i32 0, 1
    %10 = add i32 %8, %9
    sw i32 %10, i32* %0(0)

tfunc5_label4:
    jump tfunc5_label1

tfunc5_label5:
    %11 = alloca i32 4
    %12 = addiu i32 0, 1
    sw i32 %12, i32* %11(0)

tfunc5_label6:

tfunc5_label7:
    %13 = lw i32, i32* %11(0)
    %14 = addiu i32 0, 10
    bgez %13, %14 tfunc5_label15

tfunc5_label8:

tfunc5_label9:
    %15 = lw i32, i32* %0(0)
    %16 = addiu i32 0, 20
    bgez %15, %16 tfunc5_label12

tfunc5_label10:
    %17 = lw i32, i32* %0(0)
    %18 = addiu i32 0, 1
    %19 = add i32 %17, %18
    sw i32 %19, i32* %0(0)

tfunc5_label11:
    jump tfunc5_label8

tfunc5_label12:
    %20 = lw i32, i32* %11(0)
    %21 = addiu i32 0, 1
    %22 = add i32 %20, %21
    sw i32 %22, i32* %11(0)

tfunc5_label13:

tfunc5_label14:
    jump tfunc5_label6

tfunc5_label15:
    %23 = addiu i32 0, 100
    ret i32 %23
}

define i32 @tfunc3() {

tfunc3_label0:
    %0 = alloca i32 4
    %1 = addiu i32 0, 10
    sw i32 %1, i32* %0(0)
    %2 = alloca i32 4
    %3 = addiu i32 0, 20
    sw i32 %3, i32* %2(0)
    %4 = addiu i32 0, 20
    sw i32 %4, i32* %2(0)

tfunc3_label1:
    %5 = lw i32, i32* @gwxy(0)
    %6 = lw i32, i32* @gorz(0)
    bne %5, %6 tfunc3_label3

tfunc3_label2:
    %7 = addiu i32 0, 1
    ret i32 %7

tfunc3_label3:

tfunc3_label4:
    %8 = lw i32, i32* @gorz(0)
    %9 = lw i32, i32* @gb(0)
    beq %8, %9 tfunc3_label5
    jump tfunc3_label6

tfunc3_label5:
    %10 = addiu i32 0, 2
    sw i32 %10, i32* @gorz(0)
    jump tfunc3_label7

tfunc3_label6:
    %11 = addiu i32 0, 1
    sw i32 %11, i32* @gorz(0)

tfunc3_label7:

tfunc3_label8:
    %12 = lw i32, i32* @gorz(0)
    %13 = lw i32, i32* @gb(0)
    beq %12, %13 tfunc3_label9
    jump tfunc3_label14

tfunc3_label9:
    %14 = addiu i32 0, 2
    sw i32 %14, i32* @gorz(0)

tfunc3_label10:
    %15 = lw i32, i32* @gqwe(0)
    %16 = lw i32, i32* @gorz(0)
    bgez %15, %16 tfunc3_label11
    jump tfunc3_label12

tfunc3_label11:
    %17 = addiu i32 0, 4
    sw i32 %17, i32* @gorz(0)
    jump tfunc3_label13

tfunc3_label12:
    %18 = addiu i32 0, 3
    ret i32 %18

tfunc3_label13:
    jump tfunc3_label15

tfunc3_label14:
    %19 = addiu i32 0, 1
    sw i32 %19, i32* @gorz(0)

tfunc3_label15:
    %20 = addiu i32 0, 123
    ret i32 %20
}

define i32 @tfunc4() {

tfunc4_label0:

tfunc4_label1:
    %0 = lw i32, i32* @gwxy(0)
    %1 = seq i32 %0, 0
    %2 = lw i32, i32* @gorz(0)
    bne %1, %2 tfunc4_label4

tfunc4_label2:
    %3 = lw i32, i32* @gw11(0)
    beq %3, 0 tfunc4_label4

tfunc4_label3:
    %4 = addiu i32 0, 121
    ret i32 %4

tfunc4_label4:

tfunc4_label5:
    %5 = lw i32, i32* @gwxy(0)
    %6 = lw i32, i32* @gorz(0)
    bltz %5, %6 tfunc4_label12

tfunc4_label6:
    %7 = lw i32, i32* @gorz(0)
    %8 = lw i32, i32* @gqwe(0)
    bgez %7, %8 tfunc4_label12

tfunc4_label7:
    %9 = lw i32, i32* @gqwe(0)
    %10 = lw i32, i32* @gwxy(0)
    bne %9, %10 tfunc4_label12

tfunc4_label8:
    %11 = lw i32, i32* @gw11(0)
    %12 = lw i32, i32* @gx11(0)
    beq %11, %12 tfunc4_label12

tfunc4_label9:
    %13 = lw i32, i32* @gwxy(0)
    %14 = lw i32, i32* @gy11(0)
    bgtz %13, %14 tfunc4_label12

tfunc4_label10:
    %15 = lw i32, i32* @gy11(0)
    %16 = lw i32, i32* @gwxy(0)
    bltz %15, %16 tfunc4_label12

tfunc4_label11:
    %17 = addiu i32 0, 456
    ret i32 %17

tfunc4_label12:
    %18 = addiu i32 0, 1
    ret i32 %18
}

define i32 @tfunc1(i32*, i32*, i32) {

tfunc1_label0:
    %3 = alloca i32 4
    %4 = alloca i32 4
    %5 = alloca i32 4
    %6 = alloca i32 4
    %7 = lw i32*, array %3(0)
    %8 = addiu i32 0, 1
    %9 = addiu i32 0, 1
    %10 = mul i32 %8, 2
    %11 = add i32 %10, %9
    %12 = mul i32 %11, 4
    %13 = add i32* %7, %12
    %14 = lw i32, i32* %13(0)
    sw i32 %14, i32* %6(0)
    %15 = alloca i32 4
    %16 = lw i32*, array %4(0)
    %17 = addiu i32 0, 0
    %18 = mul i32 %17, 4
    %19 = add i32* %16, %18
    %20 = lw i32, i32* %19(0)
    sw i32 %20, i32* %15(0)
    %21 = alloca i32 4
    %22 = lw i32, i32* %5(0)
    %23 = lw i32, i32* %6(0)
    %24 = add i32 %22, %23
    %25 = lw i32, i32* %15(0)
    %26 = add i32 %24, %25
    sw i32 %26, i32* %21(0)
    %27 = lw i32, i32* %21(0)
    ret i32 %27
}

define i32 @tfunc2() {

tfunc2_label0:
    %0 = alloca i32 4
    %1 = la i32*, array @gnarr5
    %2 = la i32*, array @gnarr5
    %3 = addiu i32 0, 1
    %4 = mul i32 %3, 8
    %5 = add i32* %2, %4
    %6 = la i32*, array @gnarr5
    %7 = addiu i32 0, 0
    %8 = addiu i32 0, 1
    %9 = mul i32 %7, 2
    %10 = add i32 %9, %8
    %11 = mul i32 %10, 4
    %12 = add i32* %6, %11
    %13 = lw i32, i32* %12(0)
    %14 = call i32 @tfunc1(i32* %1, i32* %5, i32 %13)
    sw i32 %14, i32* %0(0)
    %15 = alloca i32 4
    %16 = la i32*, array @gnarr5
    %17 = la i32*, array @gnarr5
    %18 = addiu i32 0, 1
    %19 = mul i32 %18, 8
    %20 = add i32* %17, %19
    %21 = la i32*, array @gnarr5
    %22 = addiu i32 0, 0
    %23 = addiu i32 0, 1
    %24 = mul i32 %22, 2
    %25 = add i32 %24, %23
    %26 = mul i32 %25, 4
    %27 = add i32* %21, %26
    %28 = lw i32, i32* %27(0)
    %29 = la i32*, array @gnarr4
    %30 = addiu i32 0, 1
    %31 = mul i32 %30, 4
    %32 = add i32* %29, %31
    %33 = lw i32, i32* %32(0)
    %34 = add i32 %28, %33
    %35 = lw i32, i32* @gw11(0)
    %36 = add i32 %34, %35
    %37 = call i32 @tfunc1(i32* %16, i32* %20, i32 %36)
    sw i32 %37, i32* %15(0)
    %38 = lw i32, i32* %0(0)
    ret i32 %38
}

define i32 @func1() {

func1_label0:
    %0 = alloca i32 8
    sw i32 1, i32* %0(0)
    sw i32 2, i32* %0(4)
    %1 = alloca array 8
    %2 = lw i32, i32* @gwxy(0)
    sw i32 %2, i32* %1(0)
    %3 = lw i32, i32* @gorz(0)
    sw i32 %3, i32* %1(4)
    %4 = addiu i32 0, 2
    sw i32 %4, i32* @gwxy(0)
    %5 = la i32*, array @gnarr5
    %6 = addiu i32 0, 0
    %7 = addiu i32 0, 1
    %8 = mul i32 %6, 2
    %9 = add i32 %8, %7
    %10 = mul i32 %9, 4
    %11 = add i32* %5, %10
    %12 = addiu i32 0, 2
    sw i32 %12, i32* %11(0)
    %13 = addiu i32 0, 123
    ret i32 %13
}

define void @func2() {

func2_label0:
    call void @0putstr(str @0s0)
    ret void
}

define i32 @func3(i32) {

func3_label0:
    %1 = alloca i32 4
    %2 = lw i32, i32* %1(0)
    %3 = lw i32, i32* %1(0)
    %4 = mul i32 %2, %3
    sw i32 %4, i32* %1(0)
    %5 = lw i32, i32* %1(0)
    %6 = lw i32, i32* %1(0)
    %7 = mul i32 %5, %6
    %8 = addiu i32 0, 3
    %9 = add i32 %7, %8
    %10 = lw i32, i32* %1(0)
    %11 = rem i32 %9, %10
    %12 = lw i32, i32* %1(0)
    %13 = sub i32 %11, %12
    sw i32 %13, i32* %1(0)
    %14 = lw i32, i32* %1(0)
    ret i32 %14
}

define i32 @func4(i32, i32) {

func4_label0:
    %2 = alloca i32 4
    %3 = alloca i32 4
    %4 = lw i32, i32* %2(0)
    %5 = lw i32, i32* %3(0)
    %6 = add i32 %4, %5
    %7 = addiu i32 0, 1
    %8 = add i32 %6, %7
    sw i32 %8, i32* %2(0)
    %9 = lw i32, i32* %3(0)
    %10 = lw i32, i32* %2(0)
    %11 = sub i32 %9, %10
    %12 = addiu i32 0, 2
    %13 = sub i32 %11, %12
    sw i32 %13, i32* %3(0)
    %14 = lw i32, i32* %2(0)
    %15 = lw i32, i32* %3(0)
    %16 = mul i32 %14, %15
    %17 = addiu i32 0, 3
    %18 = add i32 %16, %17
    sw i32 %18, i32* %2(0)
    %19 = lw i32, i32* %3(0)
    %20 = lw i32, i32* %2(0)
    %21 = div i32 %19, %20
    %22 = addiu i32 0, 4
    %23 = sub i32 %21, %22
    sw i32 %23, i32* %3(0)
    %24 = lw i32, i32* %2(0)
    %25 = lw i32, i32* %3(0)
    %26 = rem i32 %24, %25
    %27 = addiu i32 0, 5
    %28 = add i32 %26, %27
    sw i32 %28, i32* %2(0)
    %29 = addiu i32 0, 1
    sw i32 %29, i32* @gwxy(0)
    %30 = lw i32, i32* %2(0)
    %31 = lw i32, i32* %2(0)
    %32 = add i32 %30, %31
    %33 = lw i32, i32* %3(0)
    %34 = lw i32, i32* %3(0)
    %35 = mul i32 %33, %34
    %36 = addiu i32 0, 4
    %37 = div i32 %35, %36
    %38 = lw i32, i32* @gwxy(0)
    %39 = rem i32 %37, %38
    %40 = sub i32 %32, %39
    sw i32 %40, i32* %3(0)
    %41 = lw i32, i32* %3(0)
    ret i32 %41
}

define i32 @main() {

main_label0:
    %0 = addiu i32 0, 19241035
    call void @0putint(i32 %0)
    call void @0putstr(str @0s1)
    call void @0putstr(str @0s2)
    %1 = lw i32, i32* @ga(0)
    %2 = lw i32, i32* @gb(0)
    %3 = lw i32, i32* @gc(0)
    %4 = lw i32, i32* @gd(0)
    %5 = lw i32, i32* @ge(0)
    %6 = lw i32, i32* @gf(0)
    call void @0putstr(str @0s3)
    call void @0putint(i32 %1)
    call void @0putstr(str @0s4)
    call void @0putint(i32 %2)
    call void @0putstr(str @0s5)
    call void @0putint(i32 %3)
    call void @0putstr(str @0s6)
    call void @0putint(i32 %4)
    call void @0putstr(str @0s7)
    call void @0putint(i32 %5)
    call void @0putstr(str @0s8)
    call void @0putint(i32 %6)
    call void @0putstr(str @0s9)
    %7 = lw i32, i32* @gwxy(0)
    %8 = lw i32, i32* @gorz(0)
    %9 = lw i32, i32* @gqwe(0)
    %10 = lw i32, i32* @gw11(0)
    %11 = lw i32, i32* @gx11(0)
    %12 = lw i32, i32* @gy11(0)
    call void @0putstr(str @0s10)
    call void @0putint(i32 %7)
    call void @0putstr(str @0s11)
    call void @0putint(i32 %8)
    call void @0putstr(str @0s12)
    call void @0putint(i32 %9)
    call void @0putstr(str @0s13)
    call void @0putint(i32 %10)
    call void @0putstr(str @0s14)
    call void @0putint(i32 %11)
    call void @0putstr(str @0s15)
    call void @0putint(i32 %12)
    call void @0putstr(str @0s16)
    %13 = alloca i32 4
    sw i32 -1, i32* %13(0)
    %14 = alloca i32 4
    sw i32 7, i32* %14(0)
    %15 = alloca i32 4
    sw i32 8, i32* %15(0)
    %16 = alloca i32 4
    sw i32 7, i32* %16(0)
    %17 = alloca i32 4
    sw i32 0, i32* %17(0)
    %18 = alloca i32 4
    sw i32 -10, i32* %18(0)
    %19 = alloca i32 4
    %20 = addiu i32 0, 5
    %21 = addiu i32 0, 3
    %22 = rem i32 %20, %21
    %23 = addiu i32 0, 10
    %24 = mul i32 %22, %23
    sw i32 %24, i32* %19(0)
    %25 = alloca i32 4
    %26 = lw i32, i32* %13(0)
    %27 = lw i32, i32* %14(0)
    %28 = add i32 %26, %27
    sw i32 %28, i32* %25(0)
    %29 = alloca i32 4
    %30 = lw i32, i32* %15(0)
    %31 = lw i32, i32* %16(0)
    %32 = sub i32 %30, %31
    sw i32 %32, i32* %29(0)
    %33 = alloca i32 4
    %34 = lw i32, i32* %19(0)
    %35 = lw i32, i32* %25(0)
    %36 = add i32 %34, %35
    %37 = lw i32, i32* %16(0)
    %38 = mul i32 %36, %37
    sw i32 %38, i32* %33(0)
    %39 = alloca i32 4
    %40 = lw i32, i32* %25(0)
    %41 = lw i32, i32* %29(0)
    %42 = sub i32 %40, %41
    %43 = lw i32, i32* %17(0)
    %44 = mul i32 %42, %43
    sw i32 %44, i32* %39(0)
    %45 = alloca i32 4
    %46 = lw i32, i32* %29(0)
    %47 = lw i32, i32* %19(0)
    %48 = add i32 %46, %47
    %49 = lw i32, i32* %18(0)
    %50 = rem i32 %48, %49
    sw i32 %50, i32* %45(0)
    %51 = lw i32, i32* %13(0)
    %52 = lw i32, i32* %14(0)
    %53 = lw i32, i32* %15(0)
    %54 = lw i32, i32* %16(0)
    %55 = lw i32, i32* %17(0)
    %56 = lw i32, i32* %18(0)
    call void @0putstr(str @0s17)
    call void @0putint(i32 %51)
    call void @0putstr(str @0s18)
    call void @0putint(i32 %52)
    call void @0putstr(str @0s19)
    call void @0putint(i32 %53)
    call void @0putstr(str @0s20)
    call void @0putint(i32 %54)
    call void @0putstr(str @0s21)
    call void @0putint(i32 %55)
    call void @0putstr(str @0s22)
    call void @0putint(i32 %56)
    call void @0putstr(str @0s23)
    %57 = lw i32, i32* %19(0)
    %58 = lw i32, i32* %25(0)
    %59 = lw i32, i32* %29(0)
    %60 = lw i32, i32* %33(0)
    %61 = lw i32, i32* %39(0)
    %62 = lw i32, i32* %45(0)
    call void @0putstr(str @0s24)
    call void @0putint(i32 %57)
    call void @0putstr(str @0s25)
    call void @0putint(i32 %58)
    call void @0putstr(str @0s26)
    call void @0putint(i32 %59)
    call void @0putstr(str @0s27)
    call void @0putint(i32 %60)
    call void @0putstr(str @0s28)
    call void @0putint(i32 %61)
    call void @0putstr(str @0s29)
    call void @0putint(i32 %62)
    call void @0putstr(str @0s30)
    %63 = call i32 @func1()
    call void @func2()
    %64 = lw i32, i32* %19(0)
    %65 = call i32 @func3(i32 %64)
    sw i32 %65, i32* @gwxy(0)
    %66 = lw i32, i32* @gwxy(0)
    call void @0putstr(str @0s31)
    call void @0putint(i32 %66)
    call void @0putstr(str @0s32)
    %67 = lw i32, i32* @ga(0)
    %68 = lw i32, i32* @gb(0)
    %69 = call i32 @func4(i32 %67, i32 %68)
    sw i32 %69, i32* @gwxy(0)
    %70 = lw i32, i32* @gwxy(0)
    call void @0putstr(str @0s33)
    call void @0putint(i32 %70)
    call void @0putstr(str @0s34)
    %71 = addiu i32 0, 0
    ret i32 %71
}

