
@ga = global i32 1
@gb = global i32 -2
@gc = global i32 8
@gd = global i32 -8
@ge = global i32 1
@gf = global i32 1
@garr = global array 1, 2
@garr1 = global array 1, -2, 8
@garr2 = global array 1, 2, 3, 4, 5, 6
@gwxy = global i32 1
@gorz = global i32 -1
@gqwe = global i32 -9
@gw11 = global i32 -2
@gx11 = global i32 0
@gy11 = global i32 0
@gnarr = global array 0, 0
@gnarr1 = global array 1, 2, 3
@gnarr4 = global array 1, -1, -9
@gnarr5 = global array 1, 3, 1, -9
@0s0 = global str "VOID FUNC\n"
@0s1 = global str "\n"
@0s2 = global str "Hello world\n"
@0s3 = global str "Global ConstDecl: "
@0s4 = global str " "
@0s5 = global str " "
@0s6 = global str " "
@0s7 = global str " "
@0s8 = global str " "
@0s9 = global str "\n"
@0s10 = global str "Global VarDecl: "
@0s11 = global str " "
@0s12 = global str " "
@0s13 = global str " "
@0s14 = global str " "
@0s15 = global str " "
@0s16 = global str "\n"
@0s17 = global str "ConstDecl: "
@0s18 = global str " "
@0s19 = global str " "
@0s20 = global str " "
@0s21 = global str " "
@0s22 = global str " "
@0s23 = global str "\n"
@0s24 = global str "VarDecl: "
@0s25 = global str " "
@0s26 = global str " "
@0s27 = global str " "
@0s28 = global str " "
@0s29 = global str " "
@0s30 = global str "\n"
@0s31 = global str "Func: "
@0s32 = global str "\n"
@0s33 = global str "Func: "
@0s34 = global str "\n"

define i32 @tfunc1(i32*, i32*, i32) {
    %4 = alloca i32 4
    %5 = alloca i32 4
    %6 = alloca i32 4
    %7 = alloca i32 4
    %8 = add i32 1, 0
    %9 = add i32 1, 0
    %10 = mul i32 %8, 2
    %11 = add i32 %10, %9
    %12 = mul i32 %11, 4
    %13 = add i32* %4, %12
    %14 = load i32, i32* %13(0)
    store i32 %14, i32* %7(0)
    %15 = alloca i32 4
    %16 = add i32 0, 0
    %17 = mul i32 %16, 4
    %18 = add i32* %5, %17
    %19 = load i32, i32* %18(0)
    store i32 %19, i32* %15(0)
    %20 = alloca i32 4
    %21 = load i32, i32* %6(0)
    %22 = load i32, i32* %7(0)
    %23 = add i32 %21, %22
    %24 = load i32, i32* %15(0)
    %25 = add i32 %23, %24
    store i32 %25, i32* %20(0)
    %26 = load i32, i32* %20(0)
    ret i32 %26
}

define i32 @tfunc2() {
    %1 = alloca i32 4
    %2 = la i32*, array @gnarr5
    %3 = la i32*, array @gnarr5
    %4 = add i32 1, 0
    %5 = mul i32 %4, 8
    %6 = add i32* %3, %5
    %7 = la i32*, array @gnarr5
    %8 = add i32 0, 0
    %9 = add i32 1, 0
    %10 = mul i32 %8, 2
    %11 = add i32 %10, %9
    %12 = mul i32 %11, 4
    %13 = add i32* %7, %12
    %14 = load i32, i32* %13(0)
    %15 = call i32 @tfunc1(i32* %2, i32* %6, i32 %14)
    store i32 %15, i32* %1(0)
    %16 = alloca i32 4
    %17 = la i32*, array @gnarr5
    %18 = la i32*, array @gnarr5
    %19 = add i32 1, 0
    %20 = mul i32 %19, 8
    %21 = add i32* %18, %20
    %22 = la i32*, array @gnarr5
    %23 = add i32 0, 0
    %24 = add i32 1, 0
    %25 = mul i32 %23, 2
    %26 = add i32 %25, %24
    %27 = mul i32 %26, 4
    %28 = add i32* %22, %27
    %29 = load i32, i32* %28(0)
    %30 = la i32*, array @gnarr4
    %31 = add i32 1, 0
    %32 = mul i32 %31, 4
    %33 = add i32* %30, %32
    %34 = load i32, i32* %33(0)
    %35 = add i32 %29, %34
    %36 = load i32, i32* @gw11(0)
    %37 = add i32 %35, %36
    %38 = call i32 @tfunc1(i32* %17, i32* %21, i32 %37)
    store i32 %38, i32* %16(0)
    %39 = load i32, i32* %1(0)
    ret i32 %39
}

define i32 @func1() {
    %1 = alloca i32 8
    store i32 1, i32* %1(0)
    store i32 2, i32* %1(4)
    %2 = alloca array 8
    %3 = load i32, i32* @gwxy(0)
    store i32 %3, i32* %2(0)
    %4 = load i32, i32* @gorz(0)
    store i32 %4, i32* %2(4)
    %5 = add i32 2, 0
    store i32 %5, i32* @gwxy(0)
    %6 = la i32*, array @gnarr5
    %7 = add i32 0, 0
    %8 = add i32 1, 0
    %9 = mul i32 %7, 2
    %10 = add i32 %9, %8
    %11 = mul i32 %10, 4
    %12 = add i32* %6, %11
    %13 = add i32 2, 0
    store i32 %13, i32* %12(0)
    %14 = add i32 123, 0
    ret i32 %14
}

define void @func2() {
    call void @0putstr(str @0s0)
    ret void
}

define i32 @func3(i32) {
    %2 = alloca i32 4
    %3 = load i32, i32* %2(0)
    %4 = load i32, i32* %2(0)
    %5 = mul i32 %3, %4
    store i32 %5, i32* %2(0)
    %6 = load i32, i32* %2(0)
    %7 = load i32, i32* %2(0)
    %8 = mul i32 %6, %7
    %9 = add i32 3, 0
    %10 = add i32 %8, %9
    %11 = load i32, i32* %2(0)
    %12 = srem i32 %10, %11
    %13 = load i32, i32* %2(0)
    %14 = sub i32 %12, %13
    store i32 %14, i32* %2(0)
    %15 = load i32, i32* %2(0)
    ret i32 %15
}

define i32 @func4(i32, i32) {
    %3 = alloca i32 4
    %4 = alloca i32 4
    %5 = load i32, i32* %3(0)
    %6 = load i32, i32* %4(0)
    %7 = add i32 %5, %6
    %8 = add i32 1, 0
    %9 = add i32 %7, %8
    store i32 %9, i32* %3(0)
    %10 = load i32, i32* %4(0)
    %11 = load i32, i32* %3(0)
    %12 = sub i32 %10, %11
    %13 = add i32 2, 0
    %14 = sub i32 %12, %13
    store i32 %14, i32* %4(0)
    %15 = load i32, i32* %3(0)
    %16 = load i32, i32* %4(0)
    %17 = mul i32 %15, %16
    %18 = add i32 3, 0
    %19 = add i32 %17, %18
    store i32 %19, i32* %3(0)
    %20 = load i32, i32* %4(0)
    %21 = load i32, i32* %3(0)
    %22 = sdiv i32 %20, %21
    %23 = add i32 4, 0
    %24 = sub i32 %22, %23
    store i32 %24, i32* %4(0)
    %25 = load i32, i32* %3(0)
    %26 = load i32, i32* %4(0)
    %27 = srem i32 %25, %26
    %28 = add i32 5, 0
    %29 = add i32 %27, %28
    store i32 %29, i32* %3(0)
    %30 = add i32 1, 0
    store i32 %30, i32* @gwxy(0)
    %31 = load i32, i32* %3(0)
    %32 = load i32, i32* %3(0)
    %33 = add i32 %31, %32
    %34 = load i32, i32* %4(0)
    %35 = load i32, i32* %4(0)
    %36 = mul i32 %34, %35
    %37 = add i32 4, 0
    %38 = sdiv i32 %36, %37
    %39 = load i32, i32* @gwxy(0)
    %40 = srem i32 %38, %39
    %41 = sub i32 %33, %40
    store i32 %41, i32* %4(0)
    %42 = load i32, i32* %4(0)
    ret i32 %42
}

define i32 @main() {
    %1 = add i32 19241035, 0
    call void @0putint(i32 %1)
    call void @0putstr(str @0s1)
    call void @0putstr(str @0s2)
    %2 = load i32, i32* @ga(0)
    %3 = load i32, i32* @gb(0)
    %4 = load i32, i32* @gc(0)
    %5 = load i32, i32* @gd(0)
    %6 = load i32, i32* @ge(0)
    %7 = load i32, i32* @gf(0)
    call void @0putstr(str @0s3)
    call void @0putint(i32 %2)
    call void @0putstr(str @0s4)
    call void @0putint(i32 %3)
    call void @0putstr(str @0s5)
    call void @0putint(i32 %4)
    call void @0putstr(str @0s6)
    call void @0putint(i32 %5)
    call void @0putstr(str @0s7)
    call void @0putint(i32 %6)
    call void @0putstr(str @0s8)
    call void @0putint(i32 %7)
    call void @0putstr(str @0s9)
    %8 = load i32, i32* @gwxy(0)
    %9 = load i32, i32* @gorz(0)
    %10 = load i32, i32* @gqwe(0)
    %11 = load i32, i32* @gw11(0)
    %12 = load i32, i32* @gx11(0)
    %13 = load i32, i32* @gy11(0)
    call void @0putstr(str @0s10)
    call void @0putint(i32 %8)
    call void @0putstr(str @0s11)
    call void @0putint(i32 %9)
    call void @0putstr(str @0s12)
    call void @0putint(i32 %10)
    call void @0putstr(str @0s13)
    call void @0putint(i32 %11)
    call void @0putstr(str @0s14)
    call void @0putint(i32 %12)
    call void @0putstr(str @0s15)
    call void @0putint(i32 %13)
    call void @0putstr(str @0s16)
    %14 = alloca i32 4
    store i32 -1, i32* %14(0)
    %15 = alloca i32 4
    store i32 7, i32* %15(0)
    %16 = alloca i32 4
    store i32 8, i32* %16(0)
    %17 = alloca i32 4
    store i32 7, i32* %17(0)
    %18 = alloca i32 4
    store i32 0, i32* %18(0)
    %19 = alloca i32 4
    store i32 -10, i32* %19(0)
    %20 = alloca i32 4
    %21 = add i32 5, 0
    %22 = add i32 3, 0
    %23 = srem i32 %21, %22
    %24 = add i32 10, 0
    %25 = mul i32 %23, %24
    store i32 %25, i32* %20(0)
    %26 = alloca i32 4
    %27 = load i32, i32* %14(0)
    %28 = load i32, i32* %15(0)
    %29 = add i32 %27, %28
    store i32 %29, i32* %26(0)
    %30 = alloca i32 4
    %31 = load i32, i32* %16(0)
    %32 = load i32, i32* %17(0)
    %33 = sub i32 %31, %32
    store i32 %33, i32* %30(0)
    %34 = alloca i32 4
    %35 = load i32, i32* %20(0)
    %36 = load i32, i32* %26(0)
    %37 = add i32 %35, %36
    %38 = load i32, i32* %17(0)
    %39 = mul i32 %37, %38
    store i32 %39, i32* %34(0)
    %40 = alloca i32 4
    %41 = load i32, i32* %26(0)
    %42 = load i32, i32* %30(0)
    %43 = sub i32 %41, %42
    %44 = load i32, i32* %18(0)
    %45 = mul i32 %43, %44
    store i32 %45, i32* %40(0)
    %46 = alloca i32 4
    %47 = load i32, i32* %30(0)
    %48 = load i32, i32* %20(0)
    %49 = add i32 %47, %48
    %50 = load i32, i32* %19(0)
    %51 = srem i32 %49, %50
    store i32 %51, i32* %46(0)
    %52 = load i32, i32* %14(0)
    %53 = load i32, i32* %15(0)
    %54 = load i32, i32* %16(0)
    %55 = load i32, i32* %17(0)
    %56 = load i32, i32* %18(0)
    %57 = load i32, i32* %19(0)
    call void @0putstr(str @0s17)
    call void @0putint(i32 %52)
    call void @0putstr(str @0s18)
    call void @0putint(i32 %53)
    call void @0putstr(str @0s19)
    call void @0putint(i32 %54)
    call void @0putstr(str @0s20)
    call void @0putint(i32 %55)
    call void @0putstr(str @0s21)
    call void @0putint(i32 %56)
    call void @0putstr(str @0s22)
    call void @0putint(i32 %57)
    call void @0putstr(str @0s23)
    %58 = load i32, i32* %20(0)
    %59 = load i32, i32* %26(0)
    %60 = load i32, i32* %30(0)
    %61 = load i32, i32* %34(0)
    %62 = load i32, i32* %40(0)
    %63 = load i32, i32* %46(0)
    call void @0putstr(str @0s24)
    call void @0putint(i32 %58)
    call void @0putstr(str @0s25)
    call void @0putint(i32 %59)
    call void @0putstr(str @0s26)
    call void @0putint(i32 %60)
    call void @0putstr(str @0s27)
    call void @0putint(i32 %61)
    call void @0putstr(str @0s28)
    call void @0putint(i32 %62)
    call void @0putstr(str @0s29)
    call void @0putint(i32 %63)
    call void @0putstr(str @0s30)
    %64 = call i32 @func1()
    call void @func2()
    %65 = load i32, i32* %20(0)
    %66 = call i32 @func3(i32 %65)
    store i32 %66, i32* @gwxy(0)
    %67 = load i32, i32* @gwxy(0)
    call void @0putstr(str @0s31)
    call void @0putint(i32 %67)
    call void @0putstr(str @0s32)
    %68 = load i32, i32* @ga(0)
    %69 = load i32, i32* @gb(0)
    %70 = call i32 @func4(i32 %68, i32 %69)
    store i32 %70, i32* @gwxy(0)
    %71 = load i32, i32* @gwxy(0)
    call void @0putstr(str @0s33)
    call void @0putint(i32 %71)
    call void @0putstr(str @0s34)
    %72 = add i32 0, 0
    ret i32 %72
}

